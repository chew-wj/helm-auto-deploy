# Default values for demo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

commonConfig:
  environment: dev
  useTimeStampAsLabel: true
  timeStamp: "s1700698160"
  repository: "docker.io"
  resourceKind: "Rollout" # Rollout
  apiVersion: "#argoproj.io/v1alpha1" #argoproj.io/v1alpha1

deploymentList:
  nginx:                     # image name
    name: nginx              # name of service, should be same as image name
    imageTag: latest                  # image tag(required)
    repository: docker.io # image repository(optional, default take value from commonConfig.repository)
    replicas: 2                        # deployment replicas(optional default 1)
 #   cm: test-config                    # configmap(optional)
    extraEnvs:                         # extra environment variables(optional)
      - name: FOO
        value: BAR
    containerPort: 80                  # Container Port(optional, default 8080)
    cpuAllocated: 200m                 # Cpu requests and limits(optional default 1)
    memAllocated: 128Mi                # Memory requests and limits(optional default 1Gi)

strategy:
  Rollout:
    blueGreen:
      activeMetadata:
        labels:
          role: active
      previewMetadata:
        labels:
          role: preview
      autoPromotionEnabled: false
      scaleDownDelaySeconds: 60

imagePullSecrets: []
imagePullPolicy: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: false
  className: ""
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: "demo-alb"
    alb.ingress.kubernetes.io/schema: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/healthcheck-port: "9000"
    alb.ingress.kubernetes.io/healthcheck-path: /ping
    alb.ingress.kubernetes.io/subnets: subnet-1, subnet-2, subnet-3
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:00000000:certificate/0000-1111-2222-3333
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: nginx.qa.demo.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: traefik
              port:
                number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingressRoute:
  active:
    enabled: false
    name: ingressroute
    domainName: "qa.demo.com"
  preview:
    enabled: true
    name: ingresroute-preview
    domainName: "qa-preview.demo.com"

scheduler:
  enabled: false  # Set to false for production
  image: xxxx/sheduler:v1
  scaleInPolicy:
    namespace: dev
    schedule: "20 15 * * 1-5"
    replicas: 0
  scaleOutPolicy:
    namespace: dev
    schedule: "05 1 * * 1-5"
    replicas: 1